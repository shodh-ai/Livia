# GPT-2 pretraining setup
{
  "data_path": "../data_sanity/enwik8/enwik8_text_document",

  "vocab_file": "../data_sanity/gpt2-vocab.json",
  "merge_file": "../data_sanity/gpt2-merges.txt",

  "save": "checkpoints/allmods-eval-crms/",
  "load": "checkpoints/allmods-crms/",

  "checkpoint_validation_with_forward_pass": False,

  "tensorboard_dir": "tensorboard/allmods-eval-crms/",
  "log_dir": "logs/allmods-eval-crms/",

  "use_wandb": true,
  "wandb_host": "https://api.wandb.ai",
  "wandb_project": "neox",


  #  "num_experts": 2,
   "num_experts": 2,
   "moe_expert_parallel_size": 1,
   # parallelism settings ( you will want to change these based on your cluster setup, ideally scheduling pipeline stages
   # across the node boundaries )
   "pipe_parallel_size": 1,
   "model_parallel_size": 1,


  #  model settings
   "num_layers": 3,
   "hidden_size": 512,
   "num_attention_heads": 8,
   "seq_length": 2048,
   "max_position_embeddings": 2048,
   "pos_emb": "rotary",
   "no_weight_tying": true,
   "gpt_j_residual": false,
   "output_layer_parallelism": "column",

   # these should provide some speedup but takes a while to build, set to true if desired
   "scaled_upper_triang_masked_softmax_fusion": false,
   "bias_gelu_fusion": false,
   "rope_fusion": false,
   "layernorm_fusion": false,

   # init methods
   "init_method": "small_init",
   "output_layer_init_method": "wang_init",

   # optimizer settings
   "optimizer": {
     "type": "Adam",
     "params": {
       "lr": 0.0002,
       "betas": [0.9, 0.95],
       "eps":  1.0e-8,
     }
   },
   "min_lr": 0.00002,

  #  # for all zero_optimization options, see https://www.deepspeed.ai/docs/config-json/#zero-optimizations-for-fp16-training
  #  "zero_optimization": {
  #   "stage": 1,
  #   "allgather_partitions": True,
  #   "allgather_bucket_size": 500000000,
  #   "overlap_comm": True,
  #   "reduce_scatter": True,
  #   "reduce_bucket_size": 500000000,
  #   "contiguous_gradients": True,
  # },

   # batch / data settings
   "train_micro_batch_size_per_gpu": 2,
   "data_impl": "mmap",
   "split": "949,50,1",
  #  "norm": "rmsnorm",
  #  "rms_norm_epsilon": 1.0e-8,
   "norm": "crmsnorm",
   "crms_norm_epsilon": 1.0e-8,
   "norm_rearrange": True, 
  #  "CA_embedding": true,
  #  "CAE_window_size": 2,
   "activation": "swiglu",
   "linear_zero_mean": True,

   # activation checkpointing
   "checkpoint_activations": true,
   "checkpoint_num_layers": 1,
   "partition_activations": true,
   "synchronize_each_layer": true,

   # regularization
   "gradient_clipping": 1.0,
   "weight_decay": 0.1,
   "hidden_dropout": 0,
   "attention_dropout": 0,

   #precision settings

  #  "fp16": {
  #   #  "fp16": true,
  #   #  "enabled": true,
  #    "enabled": false,
  #    "type": "bfloat16",
  #    "loss_scale": 0,
  #    "loss_scale_window": 1000,
  #   #  "initial_scale_power": 32,
  #    "hysteresis": 2,
  #    "min_loss_scale": 1
  #  },

  # "precision": "bfloat16",
  # "fp32_allreduce": True,


   # misc. training settings
   "train_iters": 320000,
   "lr_decay_iters": 320000,
   "distributed_backend": "nccl",
   "lr_decay_style": "cosine",
   "warmup": 0.01,
   "checkpoint_factor": 10000,
   "eval_interval": 100,
   "eval_iters": 10,
   "do_test": true,
   "extra_save_iters": [2, 500,1000,5000],

   # logging
   "log_interval": 100,
   "steps_per_print": 10,
   "keep_last_n_checkpoints": 4,
   "wall_clock_breakdown": true,
  #  "deepspeed_mpi": true,
}
