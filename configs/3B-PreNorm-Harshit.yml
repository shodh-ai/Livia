# GPT-2 pretraining setup
{
  "data_path": "/data/data_text_document",
  # "train_data_paths": ["/workspace/My_Test/gpt-neox-custom/download_slimpajama/custom/BIN/validation_text_document"],
  # "valid_data_paths": ["/workspace/My_Test/gpt-neox-custom/download_slimpajama/custom/BIN/test_text_document"],
  # "test_data_paths": ["/workspace/My_Test/gpt-neox-custom/download_slimpajama/custom/BIN/test_text_document"],

  "vocab_file": "download_slimpajama/slimpajama_val_test_trained_bpe_tok.json",
  "tokenizer_type": "HFTokenizer",

  "save": "checkpoints/3B-prenorm-harshit-session2/",
  "load": "checkpoints/3B-prenorm-harshit-session2/",

  "checkpoint_validation_with_forward_pass": False,

  "tensorboard_dir": "tensorboard/3B-prenorm-harshit-session2/",
  "log_dir": "logs/3B-prenorm-harshit-session2/",

  "use_wandb": True,
  "wandb_host": "https://api.wandb.ai",
  "wandb_project": "3B_PreNorm_Harshit-session2",
  # "wandb_group": "3B-CRMS_PreNorm",

  #  "num_experts": 8,
  #  "moe_expert_parallel_size": 1,
   # parallelism settings ( you will want to change these based on your cluster setup, ideally scheduling pipeline stages
   # across the node boundaries )
   "pipe_parallel_size": 2,
   "model_parallel_size": 4,
  #  "num_gpus": 4,

  
  # model settings
  "num_layers": 32,
  "hidden_size": 3072,
  "num_attention_heads": 32,
  "seq_length": 2048,
  "max_position_embeddings": 2048,
  "num_kv_heads": 8,

   "pos_emb": "rotary",
   "no_weight_tying": true,
   "gpt_j_residual": false,
   "output_layer_parallelism": "column",

   "attention_config": [[["flash"], 32]],

     #  "norm": "rmsnorm",
  #  "rms_norm_epsilon": 1.0e-8,
   "norm": "layernorm",
   "norm_rearrange": True, 
  #  "crms_norm_epsilon": 1.0e-8,
  #  "linear_zero_mean": True,

   "activation": "swiglu",

   # these should provide some speedup but takes a while to build, set to true if desired
   "scaled_upper_triang_masked_softmax_fusion": false,
   "bias_gelu_fusion": false,
   "rope_fusion": false,
   "layernorm_fusion": false,

   # init methods
   "init_method": "small_init",
   "output_layer_init_method": "wang_init",

   # optimizer settings
   "optimizer": {
     "type": "Adam",
     "params": {
       "lr": 0.00008,
       "betas": [0.9, 0.95],
       "eps":  1.0e-8,
     }
   },
   "min_lr": 0.000008,

   # for all zero_optimization options, see https://www.deepspeed.ai/docs/config-json/#zero-optimizations-for-fp16-training
   "zero_optimization": {
    "stage": 0,
    "allgather_partitions": True,
    "allgather_bucket_size": 500000000,
    "overlap_comm": True,
    "reduce_scatter": True,
    "reduce_bucket_size": 500000000,
    "contiguous_gradients": True,
  },

   # batch / data settings
  # "train_batch_size": 16,
  "train_micro_batch_size_per_gpu": 4,


   "data_impl": "mmap",
   "split": "949,50,1",

   # activation checkpointing
   "checkpoint_activations": true,
   "checkpoint_num_layers": 1,
   "partition_activations": true,
   "synchronize_each_layer": true,

   # regularization
   "gradient_clipping": 1.0,
   "weight_decay": 0.1,
   "hidden_dropout": 0,
   "attention_dropout": 0,

  # #  #precision settings
  #  "fp16": {
  #    "fp16": true,
  #    "enabled": true,
  #    "loss_scale": 0,
  #    "loss_scale_window": 1000,
  #    "hysteresis": 2,
  #    "min_loss_scale": 1
  #  },

   "precision": "bfloat16",

   "fp32_allreduce": True, # without a patch to torch, bf16 models have to do the allreduce in fp32

   # misc. training settings
   "train_iters": 350000,
   "lr_decay_iters": 350000,
   "distributed_backend": "nccl",
   "lr_decay_style": "cosine",
   "warmup": 0.01,
   "checkpoint_factor": 500,
   "eval_interval": 100,
   "eval_iters": 10,
   "do_test": true,
   "extra_save_iters": [10,100,500,1000],

   # logging
   "log_interval": 100,
   "steps_per_print": 10,
   "keep_last_n_checkpoints": 200,
   "wall_clock_breakdown": true,
}
